/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	v1 "github.com/aws/amazon-sagemaker-operator-for-k8s/api/hostingdeployment/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HostingDeploymentLister helps list HostingDeployments.
type HostingDeploymentLister interface {
	// List lists all HostingDeployments in the indexer.
	List(selector labels.Selector) (ret []*v1.HostingDeployment, err error)
	// HostingDeployments returns an object that can list and get HostingDeployments.
	HostingDeployments(namespace string) HostingDeploymentNamespaceLister
	HostingDeploymentListerExpansion
}

// hostingDeploymentLister implements the HostingDeploymentLister interface.
type hostingDeploymentLister struct {
	indexer cache.Indexer
}

// NewHostingDeploymentLister returns a new HostingDeploymentLister.
func NewHostingDeploymentLister(indexer cache.Indexer) HostingDeploymentLister {
	return &hostingDeploymentLister{indexer: indexer}
}

// List lists all HostingDeployments in the indexer.
func (s *hostingDeploymentLister) List(selector labels.Selector) (ret []*v1.HostingDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.HostingDeployment))
	})
	return ret, err
}

// HostingDeployments returns an object that can list and get HostingDeployments.
func (s *hostingDeploymentLister) HostingDeployments(namespace string) HostingDeploymentNamespaceLister {
	return hostingDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostingDeploymentNamespaceLister helps list and get HostingDeployments.
type HostingDeploymentNamespaceLister interface {
	// List lists all HostingDeployments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.HostingDeployment, err error)
	// Get retrieves the HostingDeployment from the indexer for a given namespace and name.
	Get(name string) (*v1.HostingDeployment, error)
	HostingDeploymentNamespaceListerExpansion
}

// hostingDeploymentNamespaceLister implements the HostingDeploymentNamespaceLister
// interface.
type hostingDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostingDeployments in the indexer for a given namespace.
func (s hostingDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1.HostingDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.HostingDeployment))
	})
	return ret, err
}

// Get retrieves the HostingDeployment from the indexer for a given namespace and name.
func (s hostingDeploymentNamespaceLister) Get(name string) (*v1.HostingDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("hostingdeployment"), name)
	}
	return obj.(*v1.HostingDeployment), nil
}
