/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by client-gen. DO NOT EDIT.

package versioned

import (
	batchtransformjobv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/batchtransformjob/v1"
	endpointconfigv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/endpointconfig/v1"
	hostingdeploymentv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/hostingdeployment/v1"
	hyperparametertuningjobv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/hyperparametertuningjob/v1"
	modelv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/model/v1"
	trainingjobv1 "github.com/aws/amazon-sagemaker-operator-for-k8s/pkg/client/clientset/versioned/typed/trainingjob/v1"
	discovery "k8s.io/client-go/discovery"
	rest "k8s.io/client-go/rest"
	flowcontrol "k8s.io/client-go/util/flowcontrol"
)

type Interface interface {
	Discovery() discovery.DiscoveryInterface
	BatchtransformjobV1() batchtransformjobv1.BatchtransformjobV1Interface
	EndpointconfigV1() endpointconfigv1.EndpointconfigV1Interface
	HostingdeploymentV1() hostingdeploymentv1.HostingdeploymentV1Interface
	HyperparametertuningjobV1() hyperparametertuningjobv1.HyperparametertuningjobV1Interface
	ModelV1() modelv1.ModelV1Interface
	TrainingjobV1() trainingjobv1.TrainingjobV1Interface
}

// Clientset contains the clients for groups. Each group has exactly one
// version included in a Clientset.
type Clientset struct {
	*discovery.DiscoveryClient
	batchtransformjobV1       *batchtransformjobv1.BatchtransformjobV1Client
	endpointconfigV1          *endpointconfigv1.EndpointconfigV1Client
	hostingdeploymentV1       *hostingdeploymentv1.HostingdeploymentV1Client
	hyperparametertuningjobV1 *hyperparametertuningjobv1.HyperparametertuningjobV1Client
	modelV1                   *modelv1.ModelV1Client
	trainingjobV1             *trainingjobv1.TrainingjobV1Client
}

// BatchtransformjobV1 retrieves the BatchtransformjobV1Client
func (c *Clientset) BatchtransformjobV1() batchtransformjobv1.BatchtransformjobV1Interface {
	return c.batchtransformjobV1
}

// EndpointconfigV1 retrieves the EndpointconfigV1Client
func (c *Clientset) EndpointconfigV1() endpointconfigv1.EndpointconfigV1Interface {
	return c.endpointconfigV1
}

// HostingdeploymentV1 retrieves the HostingdeploymentV1Client
func (c *Clientset) HostingdeploymentV1() hostingdeploymentv1.HostingdeploymentV1Interface {
	return c.hostingdeploymentV1
}

// HyperparametertuningjobV1 retrieves the HyperparametertuningjobV1Client
func (c *Clientset) HyperparametertuningjobV1() hyperparametertuningjobv1.HyperparametertuningjobV1Interface {
	return c.hyperparametertuningjobV1
}

// ModelV1 retrieves the ModelV1Client
func (c *Clientset) ModelV1() modelv1.ModelV1Interface {
	return c.modelV1
}

// TrainingjobV1 retrieves the TrainingjobV1Client
func (c *Clientset) TrainingjobV1() trainingjobv1.TrainingjobV1Interface {
	return c.trainingjobV1
}

// Discovery retrieves the DiscoveryClient
func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	if c == nil {
		return nil
	}
	return c.DiscoveryClient
}

// NewForConfig creates a new Clientset for the given config.
func NewForConfig(c *rest.Config) (*Clientset, error) {
	configShallowCopy := *c
	if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
		configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
	}
	var cs Clientset
	var err error
	cs.batchtransformjobV1, err = batchtransformjobv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.endpointconfigV1, err = endpointconfigv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.hostingdeploymentV1, err = hostingdeploymentv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.hyperparametertuningjobV1, err = hyperparametertuningjobv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.modelV1, err = modelv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.trainingjobV1, err = trainingjobv1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}

	cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	return &cs, nil
}

// NewForConfigOrDie creates a new Clientset for the given config and
// panics if there is an error in the config.
func NewForConfigOrDie(c *rest.Config) *Clientset {
	var cs Clientset
	cs.batchtransformjobV1 = batchtransformjobv1.NewForConfigOrDie(c)
	cs.endpointconfigV1 = endpointconfigv1.NewForConfigOrDie(c)
	cs.hostingdeploymentV1 = hostingdeploymentv1.NewForConfigOrDie(c)
	cs.hyperparametertuningjobV1 = hyperparametertuningjobv1.NewForConfigOrDie(c)
	cs.modelV1 = modelv1.NewForConfigOrDie(c)
	cs.trainingjobV1 = trainingjobv1.NewForConfigOrDie(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
	return &cs
}

// New creates a new Clientset for the given RESTClient.
func New(c rest.Interface) *Clientset {
	var cs Clientset
	cs.batchtransformjobV1 = batchtransformjobv1.New(c)
	cs.endpointconfigV1 = endpointconfigv1.New(c)
	cs.hostingdeploymentV1 = hostingdeploymentv1.New(c)
	cs.hyperparametertuningjobV1 = hyperparametertuningjobv1.New(c)
	cs.modelV1 = modelv1.New(c)
	cs.trainingjobV1 = trainingjobv1.New(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
	return &cs
}
